plot(st_boundary(changi), col = "black", add = TRUE)
# import boundary of region
# 2014 URA subzone
boundary <- st_read("files/masterplan/MP14_SUBZONE_NO_SEA_PL.shp", quiet = T) |>
select(PLN_AREA_N, geometry)
changi <- boundary |>
# filter(grepl("CHANGI", PLN_AREA_N)) |>
filter(PLN_AREA_N == "CHANGI") |>
st_union() |>
st_transform("EPSG:4326") |>
st_sf()
# import image
img <- "files/LST_Singapore_2013-05-26.tif"
date <- as.Date(str_extract(img, "\\d{4}-\\d{2}-\\d{2}"))
r <- rast(img) |>
project("EPSG:4326")
# save the min. temp
min_temp <- global(terra::mask(r, vect(changi)), fun = "min", na.rm = TRUE)[1,1]
r[is.na(r)] <- 0
r
#| fig.width: 10
#| fig.align: "center"
plot(r)
plot(changi, add = TRUE,  col = rgb(0, 0, 1, alpha = 0.4))
# import boundary of region
# 2014 URA subzone
boundary <- st_read("files/masterplan/MP14_SUBZONE_NO_SEA_PL.shp", quiet = T) |>
select(PLN_AREA_N, geometry)
changi <- boundary |>
# filter(grepl("CHANGI", PLN_AREA_N)) |>
filter(PLN_AREA_N == "CHANGI") |>
st_union() |>
st_transform("EPSG:4326") |>
st_sf()
# import image
img <- "files/LST_Singapore_2013-05-26.tif"
date <- as.Date(str_extract(img, "\\d{4}-\\d{2}-\\d{2}"))
r <- rast(img) |>
project("EPSG:4326")
# save the min. temp
min_temp <- global(terra::mask(r, vect(changi)), fun = "min", na.rm = TRUE)[1,1]
r[is.na(r)] <- 0
#| message: FALSE
#| echo: FALSE
setwd("/Users/amiraazad/Desktop/ST5188")
rm(list = ls())
library(dplyr)
library(sf)
library(terra)
library(ggplot2)
library(stringr)
# import boundary of region
# 2014 URA subzone
boundary <- st_read("files/masterplan/MP14_SUBZONE_NO_SEA_PL.shp", quiet = T) |>
select(PLN_AREA_N, geometry)
changi <- boundary |>
# filter(grepl("CHANGI", PLN_AREA_N)) |>
filter(PLN_AREA_N == "CHANGI") |>
st_union() |>
st_transform("EPSG:4326") |>
st_sf()
# import image
img <- "files/LST_Singapore_2013-05-26.tif"
date <- as.Date(str_extract(img, "\\d{4}-\\d{2}-\\d{2}"))
rast(img)
r <- rast(img) |>
project("EPSG:4326")
plot(r)
#| echo: FALSE
#| include: FALSE
# clear working directory
rm(list = ls())
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
lapply(scripts, source)
#| echo: FALSE
#| include: FALSE
# this section is to pre-process CHANGI data
# extract, impute and combine data from images - swa + mira
df_changi <- combine_img(subzone = "CHANGI")
warning(paste0("Skipping ", img, " — not enough points for kriging."))
warning(paste0("Skipping — not enough points for kriging."))
#| echo: FALSE
#| include: FALSE
# clear working directory
rm(list = ls())
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
lapply(scripts, source)
#| echo: FALSE
#| include: FALSE
# this section is to pre-process CHANGI data
# extract, impute and combine data from images - swa + mira
df_changi <- combine_img(subzone = "CHANGI")
#| message: FALSE
#| echo: FALSE
setwd("/Users/amiraazad/Desktop/ST5188")
rm(list = ls())
library(dplyr)
library(sf)
library(terra)
library(ggplot2)
library(stringr)
# import boundary of region
# 2014 URA subzone
boundary <- st_read("files/masterplan/MP14_SUBZONE_NO_SEA_PL.shp", quiet = T) |>
select(PLN_AREA_N, geometry)
changi <- boundary |>
# filter(grepl("CHANGI", PLN_AREA_N)) |>
filter(PLN_AREA_N == "CHANGI") |>
st_union() |>
st_transform("EPSG:4326") |>
st_sf()
# import image
img <- "files/LST_Singapore_2024-09-13.tif"
date <- as.Date(str_extract(img, "\\d{4}-\\d{2}-\\d{2}"))
r <- rast(img) |>
project("EPSG:4326")
# save the min. temp
min_temp <- global(terra::mask(r, vect(changi)), fun = "min", na.rm = TRUE)[1,1]
r[is.na(r)] <- 0
#| fig.width: 10
#| fig.align: "center"
plot(r)
plot(changi, add = TRUE,  col = rgb(0, 0, 1, alpha = 0.4))
#| fig.height: 5
#| fig.width: 5
#| fig.align: "center"
temp_changi <- terra::mask(r, vect(changi))
ext <- ext(changi)
temp_changi <- terra::crop(temp_changi, ext)
plot(temp_changi)
plot(st_boundary(changi), col = "black", add = TRUE)
temp_changi_agg <- temp_changi |>
aggregate(fact = 3, fun = "mean", na.rm = T)
temp_changi_agg <- ifel(temp_changi_agg$LST < min_temp, 0, temp_changi_agg$LST)
temp_changi_agg
plot(temp_changi_agg)
plot(st_boundary(changi), col = "black", add = TRUE)
df_changi <- terra::as.data.frame(temp_changi_agg, xy = TRUE, na.rm = TRUE) |>
mutate(LST = ifelse(LST == 0, NA, LST),
date = date)
summary(df_changi)
nrow(df_changi)
write.csv(df_changi, "LST_Singapore_2024-09-13.csv", row.names = FALSE)
nrow(df_changi)
5290/2
#| echo: FALSE
#| include: FALSE
# clear working directory
rm(list = ls())
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
lapply(scripts, source)
#| echo: FALSE
#| include: FALSE
# this section is to pre-process CHANGI data
# extract, impute and combine data from images - swa + mira
df_changi <- combine_img(subzone = "CHANGI")
# aggregate temporally and obtain final data - naomi
#| echo: FALSE
#| include: FALSE
# clear working directory
rm(list = ls())
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
lapply(scripts, source)
#| echo: FALSE
#| include: FALSE
# this section is to pre-process CHANGI data
# extract, impute and combine data from images - swa + mira
df_changi <- combine_img(subzone = "CHANGI")
# aggregate temporally and obtain final data - naomi
ls_img
# retrieve all tif files
ls_img <- list.files("../../Data/Landsat/GEE_landsat8", pattern = "\\.tif$", full.names = TRUE)
length(list.files("../../Data/Landsat/GEE_landsat8", pattern = "\\.tif$", full.names = TRUE))
print(paste0("Total skipped files: ", length(skipped_files)))
print(paste0("Total TIF files: ", length(ls_img)))
print(paste0("Successfully saved: ", length(rds_img)))
print(paste0("Total TIF files: ", length(ls_img)))
print(paste0("Successfully saved: ", length(rds_img)))
print(paste0("Total TIF files: ", length(ls_img)))
print(paste0("Successfully saved: ", length(rds_img)))
print(paste0("Total TIF files: ", length(ls_img)))
print(paste0("Successfully saved: ", length(rds_img)))
print(length(list.files(/Users/amiraazad/Documents/GitHub/ST5188/Data/Misc/SavedRDS)))
print(length(list.files("/Users/amiraazad/Documents/GitHub/ST5188/Data/Misc/SavedRDS")))
duplicated(skipped_files)
print(length(unique(ls_img)))  # Ensure this is 229
#| echo: FALSE
#| include: FALSE
# clear working directory
rm(list = ls())
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
lapply(scripts, source)
#| echo: FALSE
#| include: FALSE
# this section is to pre-process CHANGI data
# extract, impute and combine data from images - swa + mira
df_changi <- combine_img(subzone = "CHANGI")
#| echo: FALSE
#| include: FALSE
# clear working directory
rm(list = ls())
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
lapply(scripts, source)
#| echo: FALSE
#| include: FALSE
# this section is to pre-process CHANGI data
# extract, impute and combine data from images - swa + mira
df_changi <- combine_img(subzone = "CHANGI")
#| echo: FALSE
#| include: FALSE
# clear working directory
rm(list = ls())
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
lapply(scripts, source)
#| echo: FALSE
#| include: FALSE
# this section is to pre-process CHANGI data
# extract, impute and combine data from images - swa + mira
df_changi <- combine_img(subzone = "CHANGI")
#| message: FALSE
#| echo: FALSE
setwd("/Users/amiraazad/Desktop/ST5188")
rm(list = ls())
library(dplyr)
library(sf)
library(terra)
library(ggplot2)
library(stringr)
# import boundary of region
# 2014 URA subzone
boundary <- st_read("files/masterplan/MP14_SUBZONE_NO_SEA_PL.shp", quiet = T) |>
select(PLN_AREA_N, geometry)
changi <- boundary |>
# filter(grepl("CHANGI", PLN_AREA_N)) |>
filter(PLN_AREA_N == "CHANGI") |>
st_union() |>
st_transform("EPSG:4326") |>
st_sf()
# import image
img <- "files/LST_Singapore_2018-03-21.tif"
date <- as.Date(str_extract(img, "\\d{4}-\\d{2}-\\d{2}"))
r <- rast(img) |>
project("EPSG:4326")
# save the min. temp
min_temp <- global(terra::mask(r, vect(changi)), fun = "min", na.rm = TRUE)[1,1]
r[is.na(r)] <- 0
#| fig.width: 10
#| fig.align: "center"
plot(r)
plot(changi, add = TRUE,  col = rgb(0, 0, 1, alpha = 0.4))
#| fig.height: 5
#| fig.width: 5
#| fig.align: "center"
temp_changi <- terra::mask(r, vect(changi))
ext <- ext(changi)
temp_changi <- terra::crop(temp_changi, ext)
plot(temp_changi)
plot(st_boundary(changi), col = "black", add = TRUE)
temp_changi_agg <- temp_changi |>
aggregate(fact = 3, fun = "mean", na.rm = T)
temp_changi_agg <- ifel(temp_changi_agg$LST < min_temp, 0, temp_changi_agg$LST)
temp_changi_agg
plot(temp_changi_agg)
plot(st_boundary(changi), col = "black", add = TRUE)
df_changi <- terra::as.data.frame(temp_changi_agg, xy = TRUE, na.rm = TRUE) |>
mutate(LST = ifelse(LST == 0, NA, LST),
date = date)
summary(df_changi)
nrow(df_changi)
write.csv(df_changi, "LST_Singapore_2024-09-13.csv", row.names = FALSE)
5289/5290
#| echo: FALSE
#| include: FALSE
# clear working directory
rm(list = ls())
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
lapply(scripts, source)
#| echo: FALSE
#| include: FALSE
# this section is to pre-process CHANGI data
# extract, impute and combine data from images - swa + mira
df_changi <- combine_img(subzone = "CHANGI")
subzone=="CHANGI"
subzone="CHANGI"
# import subzone boundary
boundary <- st_read("../../Data/Misc/Subzone/MP14_SUBZONE_NO_SEA_PL.shp", quiet = T) |>
select(PLN_AREA_N, geometry) |>
filter(PLN_AREA_N == subzone) |>
st_union() |>
st_transform("EPSG:4326") |>
st_sf()
# import image
r <- rast(img) |>
project("EPSG:4326")
# retrieve all tif files
ls_img <- list.files("../../Data/Landsat/GEE_landsat8", pattern = "\\.tif$", full.names = TRUE)
ls_img
img = "../../Data/Landsat/GEE_landsat8/LST_Singapore_2024-11-16.tif"
p_load(stringr,
dplyr,
ggplot2,
sf,
sp,
terra,
gstat)
# import subzone boundary
boundary <- st_read("../../Data/Misc/Subzone/MP14_SUBZONE_NO_SEA_PL.shp", quiet = T) |>
select(PLN_AREA_N, geometry) |>
filter(PLN_AREA_N == subzone) |>
st_union() |>
st_transform("EPSG:4326") |>
st_sf()
# import image
r <- rast(img) |>
project("EPSG:4326")
date <- as.Date(str_extract(img, "\\d{4}-\\d{2}-\\d{2}"))
# save the min. temp of region
min_temp <- global(terra::mask(r, vect(boundary)), fun = "min", na.rm = TRUE)[1,1]
# set NA values in image to be 0
r[is.na(r)] <- 0
# mask & crop to subzone region
temp_boundary <- terra::mask(r, vect(boundary))
ext <- ext(boundary)
temp_boundary <- terra::crop(temp_boundary, ext)
# aggregate spatially to reduce the number of points
aggregated_temp_boundary <- temp_boundary |>
aggregate(fact = 3, fun = "mean", na.rm = T)
# temperature lower than min_temp -> set to 0 i.e. take it as missing data
aggregated_temp_boundary <- ifel(aggregated_temp_boundary$LST < min_temp, 0, aggregated_temp_boundary$LST)
# extract as dataframe & set 0 values to be NA
df_boundary <- terra::as.data.frame(aggregated_temp_boundary, xy = TRUE, na.rm = TRUE) |>
mutate(LST = ifelse(LST == 0, NA, LST),
date = date)
# if entire df_boundary is NA, skip
if (all(is.na(df_boundary$LST))) {
print(paste0("Skipping ", basename(img), " — all LST are missing."))
assign("skipped_files", c(get("skipped_files", envir = .GlobalEnv), basename(img)), envir = .GlobalEnv)
return(NULL)
}
# if there's missing values, impute
if (any(is.na(df_boundary$LST))) {
df_boundary <- impute_img(df_boundary)
# if there's insufficient points to impute, skip
if (is.null(df_boundary)) {
print(paste0("Skipping ", basename(img), " - not enough data for kriging"))
assign("skipped_files", c(get("skipped_files", envir = .GlobalEnv), basename(img)), envir = .GlobalEnv)
return(NULL)
}
}
df_boundary
.
# extract known data points
known_points <- df_boundary[!is.na(df_boundary$LST), ]
known_points
x_known <- known_points$x
y_known <- known_points$y
z_known <- known_points$LST
# extract locations where LST is missing
missing_points <- df_boundary[is.na(df_boundary$LST), ]
x_missing <- missing_points$x
y_missing <- missing_points$y
if (missing_points/nrow(df_boundary) > 0.95) {
warning("Variogram calculation failed - not enough data. Skipping...")
return(NULL)
}
nrow(df_boundary)
missing_points
nrow(missing_points)
#| echo: FALSE
#| include: FALSE
# clear working directory
rm(list = ls())
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
lapply(scripts, source)
#| echo: FALSE
#| include: FALSE
# clear working directory
rm(list = ls())
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
lapply(scripts, source)
#| echo: FALSE
#| include: FALSE
# this section is to pre-process CHANGI data
# extract, impute and combine data from images - swa + mira
df_changi <- combine_img(subzone = "CHANGI")
# aggregate temporally and obtain final data - naomi
nrow(list.files("/Users/amiraazad/Documents/GitHub/ST5188/Data/Misc/SavedRDS"))
length(list.files("/Users/amiraazad/Documents/GitHub/ST5188/Data/Misc/SavedRDS"))
156+76
duplicated(list.files("/Users/amiraazad/Documents/GitHub/ST5188/Data/Misc/SavedRDS"))
length(list.files("/Users/amiraazad/Documents/GitHub/ST5188/Data/Landsat/GEE_landsat8"))
a = read.csv("/Users/amiraazad/Documents/GitHub/ST5188/Data/Final/CHANGI.csv", stringsAsFactors = FALSE)
a = read.csv("/Users/amiraazad/Documents/GitHub/ST5188/Data/Final/CHANGI_skipped_files.csv", stringsAsFactors = FALSE)
any(list.files("/Users/amiraazad/Documents/GitHub/ST5188/Data/Misc/SavedRDS") %in% a$skipped_files)
list.files("/Users/amiraazad/Documents/GitHub/ST5188/Data/Misc/SavedRDS")
any(gsub("\\.RDS$", "", list.files("/Users/amiraazad/Documents/GitHub/ST5188/Data/Misc/SavedRDS")) %in% gsub("\\.tif$", "", a$skipped_files))
which(gsub("\\.RDS$", "", list.files("/Users/amiraazad/Documents/GitHub/ST5188/Data/Misc/SavedRDS")) %in% gsub("\\.tif$", "", a$skipped_files))
#| message: FALSE
rm(list = ls())
setwd("/Users/amiraazad/Documents/GitHub/st5209-2025/amiraazad-assignments")
library(tidyverse)
library(fpp3)
library(GGally)
library(knitr)
library(gridExtra)
gc_tourism <- tourism |>
filter(Region == "Gold Coast") |>
summarise(Total = sum(Trips))
head(gc_tourism, 3)
gc_train_1 <- gc_tourism |>
filter_index(~"2016 Q4")
gc_train_2 <- gc_tourism |>
filter_index(~"2015 Q4")
gc_train_3 <- gc_tourism |>
filter_index(~"2014 Q4")
#| fig.width: 10
gc_fc_1 <- gc_train_1 |>
model(snaive = SNAIVE(Total))
gc_fc_2 <- gc_train_2 |>
model(snaive = SNAIVE(Total))
gc_fc_3 <- gc_train_3 |>
model(snaive = SNAIVE(Total))
gc_fc <- bind_cols(gc_fc_1, gc_fc_2, gc_fc_3) |>
rename("gc_fc_1" = `snaive...1`,
"gc_fc_2" = `snaive...2`,
"gc_fc_3" = `snaive...3`)
gc_fc |>
forecast(h = 4) |>
autoplot(gc_tourism, level = NULL)
gc_fc |>
forecast(h = 4) |>
accuracy(gc_tourism) |>
select(.model, MASE) |>
arrange(MASE) |>
kable()
ccharts <- read_rds("../_data/CLEANED/ccharts.rds")
ccharts_train <- ccharts[["train"]]
ccharts_test <- ccharts[["test"]]
#| fig.width: 10
ccharts_train |>
group_by(Type) |>
filter(id %in% first(id)) |>
ungroup() |>
autoplot(value)
#| eval: TRUE
#| warning: FALSE
train_feats <- ccharts_train |>
features(value, feature_set(pkgs = "feasts"))
test_feats <- ccharts_test |>
features(value, feature_set(pkgs = "feasts"))
feats <- rbind(train_feats, test_feats)
feats |>
select(Type, acf1, stl_e_acf1) |>
group_by(Type) |>
summarise(mean_acf = mean(acf1),
mean_stl = mean(stl_e_acf1)) |>
mutate(difference = mean_acf - mean_stl)
ccharts_train |>
group_by(Type) |>
filter(Type == c("Increasing", "Decreasing", "Upward", "Downward"),
id %in% first(id)) |>
ungroup() |>
autoplot(value)
ggpairs(train_feats, columns = feature_cols, aes(color = Type)) +
theme_minimal()
ggplot(train_feats, aes(x = linearity, y = "shift_var_max", color = Type)) +
geom_points()
ggplot(train_feats, aes(x = linearity, y = "shift_var_max", color = Type)) +
geom_poins()
ggplot(train_feats, aes(x = linearity, y = "shift_var_max", color = Type)) +
geom_point()
ggplot(train_feats, aes(x = "linearity", y = "shift_var_max", color = Type)) +
geom_point()
ggplot(train_feats, aes(x = linearity, y = shift_var_max, color = Type)) +
geom_point()
list.files(".")
list.files("../..")
list.files("../../Data")
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
scripts
list.files("../..")
list.files("../../Code")
list.files("../../Code/Preprocessing")
#| echo: FALSE
#| include: FALSE
# clear working directory
rm(list = ls())
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
lapply(scripts, source)
scripts
list.files()
list.files(..)
list.files("..")
list.files("../..")
list.files("../../Code/Proprecessing")
list.files("../../Code/Proprocessing")
list.files("../../Code/Preprocessing")
# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
scripts
