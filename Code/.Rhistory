# source libraries and functions under `Code` files
scripts = list.files("../../Code/Preprocessing", full.names = TRUE)
scripts
list.files("../../Code/Preprocessing", full.names = TRUE)
list.files("../../Code/Preprocessing")
list.files("../..")
list.files("/..")
list.files("..")
list.files("../Code/Preprocessing")
list.files("../Data/Misc")
# retrieve all tif files
ls_img <- list.files("../Data/Landsat/GEE_landsat8", pattern = "\\.tif$", full.names = TRUE)
ls_img
# retrieve all imputed data files
rds_img <- list.files("../Data/Misc/SavedRDS", pattern = "\\.RDS$", full.names = TRUE)
rds_img
# export data into excel
write.csv(rds_df_combined, paste0("../Data/Final/", subzone, ".csv"), row.names = FALSE)
rds_df_combined <- bind_rows(lapply(rds_img, readRDS))
#| echo: FALSE
#| include: FALSE
# clear working directory
rm(list = ls())
# source libraries and functions under `Code` files
scripts = list.files("../Code/Preprocessing", full.names = TRUE)
lapply(scripts, source)
lapply(scripts, source)
scripts
#| echo: FALSE
#| include: FALSE
# this section is to pre-process CHANGI data
# extract, impute and combine data from images - swa + mira
df_changi <- combine_img(subzone = "CHANGI")
#| message: FALSE
rm(list = ls())
setwd("/Users/amiraazad/Documents/GitHub/st5209-2025/amiraazad-assignments")
library(tidyverse)
library(fpp3)
library(GGally)
library(knitr)
library(gridExtra)
gc_tourism <- tourism |>
filter(Region == "Gold Coast") |>
summarise(Total = sum(Trips))
head(gc_tourism, 3)
gc_train_1 <- gc_tourism |>
filter_index(~"2016 Q4")
gc_train_2 <- gc_tourism |>
filter_index(~"2015 Q4")
gc_train_3 <- gc_tourism |>
filter_index(~"2014 Q4")
#| fig.width: 10
gc_fc_1 <- gc_train_1 |>
model(snaive = SNAIVE(Total))
gc_fc_2 <- gc_train_2 |>
model(snaive = SNAIVE(Total))
gc_fc_3 <- gc_train_3 |>
model(snaive = SNAIVE(Total))
gc_fc <- bind_cols(gc_fc_1, gc_fc_2, gc_fc_3) |>
rename("gc_fc_1" = `snaive...1`,
"gc_fc_2" = `snaive...2`,
"gc_fc_3" = `snaive...3`)
gc_fc |>
forecast(h = 4) |>
autoplot(gc_tourism, level = NULL)
gc_fc |>
forecast(h = 4) |>
accuracy(gc_tourism) |>
select(.model, MASE) |>
arrange(MASE) |>
kable()
ccharts <- read_rds("../_data/CLEANED/ccharts.rds")
ccharts_train <- ccharts[["train"]]
ccharts_test <- ccharts[["test"]]
#| fig.width: 10
ccharts_train |>
group_by(Type) |>
filter(id %in% first(id)) |>
ungroup() |>
autoplot(value)
#| eval: TRUE
#| warning: FALSE
train_feats <- ccharts_train |>
features(value, feature_set(pkgs = "feasts"))
test_feats <- ccharts_test |>
features(value, feature_set(pkgs = "feasts"))
feats <- rbind(train_feats, test_feats)
feats |>
select(Type, acf1, stl_e_acf1) |>
group_by(Type) |>
summarise(mean_acf = mean(acf1),
mean_stl = mean(stl_e_acf1)) |>
mutate(difference = mean_acf - mean_stl)
# ccharts_train |>
#   group_by(Type) |>
#   filter(Type == c("Increasing", "Decreasing", "Upward", "Downward"),
#          id %in% first(id)) |>
#   ungroup() |>
#   autoplot(value)
